test-resources/src/micro/testCall1.js: [definite] Exceptional program exit is unreachable
test-resources/src/micro/testCall1.js:18:5: [definite] The variable y is never used
test-resources/src/micro/testCall1.js:2:2: [info] Abstract value: [@Object#node9]
test-resources/src/micro/testCall1.js:3:2: [info] Abstract state:
Abstract state:
  Execution context: ScopeChain=[[@activation#node35],[@<the global object>[native]]], VariableObject=[@activation#node35], this=Null
  Summarized: maybe=[], definitely=[]
  Store (excluding basis and default objects): 
  Registers: 
    v1=Undef
  MustReachingDefs: 
    v1: node 35 (test-resources/src/micro/testCall1.js:1:15)
  Functions in stack: [block 15, context {this=[@Object#node9]}]
test-resources/src/micro/testCall1.js:7:2: [info] Abstract value: [@Object#node13]
test-resources/src/micro/testCall1.js:8:2: [info] Abstract state:
Abstract state:
  Execution context: ScopeChain=[[@activation#node44],[@<the global object>[native]]], VariableObject=[@activation#node44], this=Null
  Summarized: maybe=[], definitely=[]
  Store (excluding basis and default objects): 
  Registers: 
    v1=Undef
  MustReachingDefs: 
    v1: node 44 (test-resources/src/micro/testCall1.js:6:15)
  Functions in stack: [block 22, context {this=[@Object#node13]}]
test-resources/src/micro/testCall1.js:19:1: [info] Abstract state:
Abstract state:
  Execution context: ScopeChain=[[@<the global object>[native]]], VariableObject=[@<the global object>[native]], this=Null
  Summarized: maybe=[@replace#fun4, @arguments#node53, @arguments#node44, @arguments#node35, @activation#node53, @activation#node44, @activation#node35, @Object#node9, @Object#node7, @Object#node66, @Object#node59, @Object#node14, @Object#node13, @Object#node10, @<anonymous>#fun3, @<anonymous>#fun2, @<anonymous>#fun1], definitely=[@replace#fun4, @arguments#node53, @activation#node53, @Object#node9, @Object#node7, @Object#node66, @Object#node59, @Object#node14, @Object#node13, @Object#node10, @<anonymous>#fun3, @<anonymous>#fun2, @<anonymous>#fun1]
  Store (excluding basis and default objects): 
    @<the global object>[native] (<initial state>): {Math:[@Math[native]],Object:[@Object[native]],String:[@String[native]],x:[@Object#node9, @Object#node13],x1:[@Object#node9],x2:[@Object#node13],y:8.0|"7foo",[[DefaultNumeric]]=?,[[DefaultOther]]=?,[[Prototype]]=[@Object.prototype[native]],[[Value]]=?,[[Scope]]=?}
    @Math[native] (<initial state>): {random:^(@Math[native].random[present]),[[DefaultNumeric]]=?,[[DefaultOther]]=?,[[Prototype]]=?,[[Value]]=?,[[Scope]]=?}
    @Object.prototype[native] (<initial state>): {configurable:^(@Object.prototype[native].configurable[absent]),enumerable:^(@Object.prototype[native].enumerable[absent]),get:^(@Object.prototype[native].get[absent]),m:^(@Object.prototype[native].m[absent]),replace:^(@Object.prototype[native].replace[absent]),set:^(@Object.prototype[native].set[absent]),value:^(@Object.prototype[native].value[absent]),writable:^(@Object.prototype[native].writable[absent]),x:^(@Object.prototype[native].x[absent]),x1:^(@Object.prototype[native].x1[absent]),x2:^(@Object.prototype[native].x2[absent]),y:^(@Object.prototype[native].y[absent]),[[DefaultNumeric]]=?,[[DefaultOther]]=?,[[Prototype]]=Null,[[Value]]=?,[[Scope]]=?}
    @Object[native] (<initial state>): {defineProperty:[@Object.defineProperty[native]],[[DefaultNumeric]]=?,[[DefaultOther]]=?,[[Prototype]]=?,[[Value]]=?,[[Scope]]=?}
    @String.prototype[native] (<initial state>): {replace:[@replace#fun4],[[DefaultNumeric]]=?,[[DefaultOther]]=?,[[Prototype]]=[@Object.prototype[native]],[[Value]]="",[[Scope]]=?}
    @String[native] (<initial state>): {prototype:[@String.prototype[native]],[[DefaultNumeric]]=?,[[DefaultOther]]=?,[[Prototype]]=?,[[Value]]=?,[[Scope]]=?}
    @Object#node7 (host-environment-sources-loader): {constructor:[@<anonymous>#fun3],[[Prototype]]=[@Object.prototype[native]],[[Value]]=NaN}
    @Object#node9 (test-resources/src/micro/testCall1.js:1:10): {m:[@<anonymous>#fun1],[[Prototype]]=[@Object.prototype[native]]}
    @<anonymous>#fun1 (test-resources/src/micro/testCall1.js:1:15): {length:1.0,name:"",prototype:[@Object#node10],[[Prototype]]=[@Function.prototype[native]],[[Scope]]=[[@<the global object>[native]]]}
    @Object#node10 (test-resources/src/micro/testCall1.js:1:15): {constructor:[@<anonymous>#fun1],[[Prototype]]=[@Object.prototype[native]],[[Value]]=NaN}
    @Object#node13 (test-resources/src/micro/testCall1.js:6:10): {m:[@<anonymous>#fun2],[[Prototype]]=[@Object.prototype[native]]}
    @<anonymous>#fun2 (test-resources/src/micro/testCall1.js:6:15): {length:1.0,name:"",prototype:[@Object#node14],[[Prototype]]=[@Function.prototype[native]],[[Scope]]=[[@<the global object>[native]]]}
    @Object#node14 (test-resources/src/micro/testCall1.js:6:15): {constructor:[@<anonymous>#fun2],[[Prototype]]=[@Object.prototype[native]],[[Value]]=NaN}
    @<anonymous>#fun3 (HOST(string-replace-model.js):1:1): {length:0.0,name:"",prototype:[@Object#node7],[[Prototype]]=[@Function.prototype[native]],[[Scope]]=[[@<the global object>[native]]]}
    @activation#node53 (HOST(string-replace-model.js):1:1): {arguments:[@arguments#node53]}
    @arguments#node53 (HOST(string-replace-model.js):1:1): {callee:[@<anonymous>#fun3],length:0.0,[[Prototype]]=[@Object.prototype[native]]}
    @Object#node66 (HOST(string-replace-model.js):3:12): {constructor:[@replace#fun4],[[Prototype]]=[@Object.prototype[native]],[[Value]]=NaN}
    @replace#fun4 (HOST(string-replace-model.js):3:12): {length:2.0,name:"replace",prototype:[@Object#node66],[[Prototype]]=[@Function.prototype[native]],[[Scope]]=[[@activation#node53],[@<the global object>[native]]]}
  Registers: 
    v1=Undef
  MustReachingDefs: 
    v1: node 0 (test-resources/src/micro/testCall1.js)
  MustEquals: 
    @<the global object>[native].y: [v14]
    v14: [@<the global object>[native].y]
  Functions in stack: []
Soundness testing succeeded for 22 checks (with 0 expected failures)
